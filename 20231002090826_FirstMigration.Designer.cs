// <auto-generated />
using MediaApp.DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MediaApp.DAL.Migrations
{
    [DbContext(typeof(MediaAppDbContext))]
    [Migration("20231002090826_FirstMigration")]
    partial class FirstMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MediaApp.BLL.Album", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Albums");
                });

            modelBuilder.Entity("MediaApp.BLL.MediaFile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsSelected")
                        .HasColumnType("bit");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MediaType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("MediaFiles");

                    b.HasDiscriminator<string>("MediaType").HasValue("MediaFile");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("MediaApp.EL.MediaFileAlbum", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AlbumId")
                        .HasColumnType("int");

                    b.Property<int>("MediaFileId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AlbumId");

                    b.HasIndex("MediaFileId");

                    b.ToTable("MediaFileAlbums");
                });

            modelBuilder.Entity("MediaApp.BLL.Photo", b =>
                {
                    b.HasBaseType("MediaApp.BLL.MediaFile");

                    b.HasDiscriminator().HasValue("Photo");
                });

            modelBuilder.Entity("MediaApp.BLL.Video", b =>
                {
                    b.HasBaseType("MediaApp.BLL.MediaFile");

                    b.HasDiscriminator().HasValue("Video");
                });

            modelBuilder.Entity("MediaApp.EL.MediaFileAlbum", b =>
                {
                    b.HasOne("MediaApp.BLL.Album", "Album")
                        .WithMany("MediaFileAlbums")
                        .HasForeignKey("AlbumId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MediaApp.BLL.MediaFile", "MediaFile")
                        .WithMany("MediaFileAlbums")
                        .HasForeignKey("MediaFileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Album");

                    b.Navigation("MediaFile");
                });

            modelBuilder.Entity("MediaApp.BLL.Album", b =>
                {
                    b.Navigation("MediaFileAlbums");
                });

            modelBuilder.Entity("MediaApp.BLL.MediaFile", b =>
                {
                    b.Navigation("MediaFileAlbums");
                });
#pragma warning restore 612, 618
        }
    }
}
